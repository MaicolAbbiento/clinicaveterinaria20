@model clinicaveterinaria20.Models.Animale

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Animal", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Animale</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tipo, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tipo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.coloreMantello, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.coloreMantello, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.coloreMantello, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dataDinascita, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataDinascita, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dataDinascita, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.microchip, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.CheckBox("isMicrochipChecked", Model.microchip ?? false, new { id = "toggleCheckChip" })
            </div>
        </div>

        <div class="form-group" id="nmicrochipDiv" style="display:none;">
            @Html.LabelFor(model => model.nmicrochip, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nmicrochip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nmicrochip, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.Label("toggleCheckOwner", "Ha un proprietario")
        @Html.CheckBox("isProprietario", false, new { id = "toggleCheckOwner" })

        <div id="proprietarioDiv" style="display:none;">
            <div class="form-group">
                @Html.LabelFor(model => model.nomeProprietario, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nomeProprietario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nomeProprietario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.cognomeProprietario, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cognomeProprietario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cognomeProprietario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.codicefiscale, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.codicefiscale, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.codicefiscale, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("toggleCheckSmarrito", "L'animale è smarrito?", new { @class = "control-label " })
            <div class="col-md-10">
                @Html.CheckBox("isSmarrito", false, new { id = "toggleCheckSmarrito" })
            </div>
        </div>

        <div id="smarritoDiv" style="display:none;">
            <div class="form-group">
                @Html.LabelFor(model => model.datainizioricovero, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.datainizioricovero, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.datainizioricovero, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.foto, htmlAttributes: new { @class = "control-label " });
                <div class="col-md-10">
                    @Html.EditorFor(model => model.foto, new { htmlAttributes = new { type = "file", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.foto, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            $("#toggleCheckChip").change(function () {
                console.log("funziona")
                let isChecked = $(this).is(":checked");
                let nmicrochipDiv = $("#nmicrochipDiv");

                nmicrochipDiv.toggle(isChecked);

                if (!isChecked) {
                    $("#nmicrochip").val("0");
                    $("#nmicrochip").prop("disabled", true);
                } else {
                    $("#nmicrochip").attr("placeholder", "Inserire numero microchip");
                    $("#nmicrochip").prop("disabled", false);
                }
            });
            $("#toggleCheckOwner").change(function () {
                if ($(this).is(":checked")) {

                    $("#proprietarioDiv").show();
                }
                else {
                    $("#proprietarioDiv").hide();
                }
            })
            $("#toggleCheckSmarrito").change(function () {
                if ($(this).is(":checked")) {
                    $("#smarritoDiv").show();
                } else {
                    $("#smarritoDiv").hide();
                }
            });

        })
    </script>
}